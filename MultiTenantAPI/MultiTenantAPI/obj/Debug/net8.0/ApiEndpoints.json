[
  {
    "ContainingType": "MultiTenantAPI.Controllers.AuthorizationDemoController",
    "Method": "ApproveUser",
    "RelativePath": "api/admin/approve-user/{userId}",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AuthorizationDemoController",
    "Method": "GetAllLogs",
    "RelativePath": "api/admin/logs",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AuthorizationDemoController",
    "Method": "GetAllUsers",
    "RelativePath": "api/admin/users",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AuthorizationDemoController",
    "Method": "AdminOnly",
    "RelativePath": "api/AdminOnly",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.ContentsController",
    "Method": "Get",
    "RelativePath": "api/Contents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.ContentsController",
    "Method": "PostAsync",
    "RelativePath": "api/Contents",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "IsPrivate",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "rendition",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.ContentsController",
    "Method": "Delete",
    "RelativePath": "api/Contents/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.ContentsController",
    "Method": "Stream",
    "RelativePath": "api/Contents/stream/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.IdentityController",
    "Method": "DeleteUser",
    "RelativePath": "api/Identity/delete/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.IdentityController",
    "Method": "SignIn",
    "RelativePath": "api/Identity/signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MultiTenantAPI.DTO.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.IdentityController",
    "Method": "Register",
    "RelativePath": "api/Identity/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MultiTenantAPI.DTO.UserRegistrationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.IdentityController",
    "Method": "CreateTenant",
    "RelativePath": "api/Identity/tenant-create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MultiTenantAPI.DTO.TenantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.ProgressController",
    "Method": "Get",
    "RelativePath": "api/progress",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AccountController",
    "Method": "GetTenantFileCount",
    "RelativePath": "api/TenantFileCount",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AccountController",
    "Method": "GetTenantUserCount",
    "RelativePath": "api/TenantUserCount",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MultiTenantAPI.Controllers.AccountController",
    "Method": "GetUserProfile",
    "RelativePath": "api/UserProfile",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  }
]